# Sample .profile for SuSE Linux
# rewritten by Christian Steinruecken <cstein@suse.de>
#
# This file is read each time a login shell is started.
# All other interactive shells will only read .bashrc; this is particularly
# important for language settings, see below.

# load modules if on HPC
if [[ -n $MODULEPATH ]]
    then module load blas hdf5 R/3.2.1
    else echo "no modulepath loaded yet / or no module system, no worries"
fi

test -z "$PROFILEREAD" && . /etc/profile

# Most applications support several languages for their output.
# To make use of this feature, simply uncomment one of the lines below or
# add your own one (see /usr/share/locale/locale.alias for more codes)
#
#export LANG=de_DE.UTF-8	# uncomment this line for German output
#export LANG=fr_FR.UTF-8	# uncomment this line for French output
#export LANG=es_ES.UTF-8	# uncomment this line for Spanish output

wiki() { dig +short txt $1.wp.dg.cx; }

test -s ~/.alias && . ~/.alias || true

#set umask so that I don't screwup permissions
umask 0002

###########
# ALIASES #
###########
alias gitundel='git diff --no-renames --name-only --diff-filter=D -z | xargs -0 git co -- ' #will undelete files that you may have accidently deleted in the last commit, FTW!
#see all hidden files and nothing else
alias linvis='ls -d .?*'
#cd's into the first directory
alias cdfrst='cd $(~/bin/ls --group-directories-first | head -1)' 

alias whoison="w | more"
alias gohome="cd ~"
alias l="ls -alh --time-style=+"%Y-%m-%d-%T""
alias ls='ls --color=always'
alias moduel="module"
alias gohl="cd /rsgrps/bhurwitz/scottdaniel"
alias goref="cd /rsgrps/bhurwitz/hurwitzlab/data/reference" 
alias vime="vim -c Ex"
alias qstatme="qstat -t -u scottdaniel"
alias nod='echo You nod.'
alias laugh='echo You laugh out loud!'
alias lol='laugh'

############
# dircolor #
############
eval `dircolors ~/.dir_colors`

#################
# perl settings #
#################
#Now trying perlbrew (SEE BOTTOM)

##################
# R settings #####
##################
R_LIBS="~/R/library"
export R_LIBS

##################
# Python Settings#
##################
#portable pypy! to speed up scripts hopefully
export pypy="/home/u18/scottdaniel/src/pypy-5.9-linux_x86_64-portable/bin/pypy"

#CONDA!!!!
export CONDA="$HOME/anaconda2"
#export PYTHONPATH="$CONDA/pkgs:$CONDA/lib/python2.7/site-packages"
export PYTHONPATH="$CONDA/pkgs"
export PYTHON="$CONDA/bin/python"
export PYTHONBIN="$CONDA/bin"

##################
# my fav. editor #
##################
export VISUAL=vim
export EDITOR=$VISUAL

#################
# path settings #
#################
export PATH="$HOME/bin:$PATH"
export MANPATH="$HOME/bin/share/man:$MANPATH"
#stuff for gsl
export LD_LIBRARY_PATH="$CONDA/lib"
export LIBRARY_PATH="$CONDA/lib"
#stuff for c/c++ compiling
export CPPFLAGS="-I$CONDA/include"
export CCFLAGS="$CCFLAGS -I$CONDA/include"
export LDFLAGS="$LDFLAGS -L$CONDA/lib"
# Some people don't like fortune. If you uncomment the following lines,
# you will have a fortune each time you log in ;-)

if [[ $(echo $HOSTNAME) == *"login"* ]]; then
    if [ -x $PYTHONBIN/fortune ] ; then
        echo
        echo "=============== Quote Of The Day ==============="
        echo
        fortune $HOME/morefortunes/data/fortunes
        echo
        echo "================================================"
        echo
    fi
fi

# Function for uploading a file to home directory on lytic
function scplyt {
	for file in $*; do
		if [ -e "$file" ]; then	
			scp $file scottdaniel@lytic.hpc.arizona.edu:$HOME
		else
			echo "$file does not exist"
		fi
	done
}

# Function to change directory and then ls it
function cdls {
    cd $*
    ls
}

# pip bash completion start
_pip_completion()
{
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 ) )
}
complete -o default -F _pip_completion pip
# pip bash completion end

if [[ -n $(which perlbrew) ]]
    then source ~/perl5/perlbrew/etc/bashrc
    else echo "perlbrew doesnt exist, no worries"
fi

#function to go up directories quickly
up()
{
    cd $(eval "printf '../'%.0s {1..$1}") && pwd
}
